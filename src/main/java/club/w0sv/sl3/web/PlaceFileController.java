package club.w0sv.sl3.web;

import club.w0sv.grlevel3.PlaceFileWriter;
//import club.w0sv.sl3.AprsIconSupplier;
import club.w0sv.sl3.AprsLookupException;
import club.w0sv.sl3.LocationService;
import club.w0sv.sl3.TrackingEntry;
//import club.w0sv.util.IconIdentifier;
import club.w0sv.util.QuantityUtil;
import club.w0sv.util.XYPoint;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import systems.uom.common.USCustomary;

import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.io.StringWriter;
import java.math.RoundingMode;
import java.net.URI;
import java.time.Duration;
import java.util.Optional;

@Controller()
@RequestMapping(path = "/placeFiles")
public class PlaceFileController {
    private final Logger logger = LoggerFactory.getLogger(getClass());
    
    private LocationService locationService;
//    private AprsIconSupplier iconSupplier;
    
    public PlaceFileController(@Autowired LocationService locationService) {
        this.locationService = locationService;
//        try {
//            iconSupplier = new AprsIconSupplier();
//        }
//        catch (Exception ex) {
//            logger.error("error loading icon supplier", ex);
//        }
    }
    
    @RequestMapping(method= RequestMethod.GET,path = "/spotters",produces = "text/plain;charset=Windows-1252")
    @ResponseBody
    public String spotterList(HttpServletResponse response) throws IOException, AprsLookupException {
        response.setContentType("text/plain");
        locationService.updateIfDue();

//        ServletOutputStream out = response.getOutputStream();
        StringWriter out = new StringWriter();

        PlaceFileWriter writer = new PlaceFileWriter(out);
        writer.addComment("Spotter Locations");
        writer.addComment("Generated by " + getClass().getPackage().getImplementationTitle() + " " + getClass().getPackage().getImplementationVersion());
        writer.setTitle("Spotter Locations - SpotterLevel3");
        writer.setRefreshFrequency(Duration.ofMinutes(1));
        int basicFont = writer.defineFont(11, PlaceFileWriter.FontStyle.BOLD,"Courier New");
        int aprsPrimary = writer.defineIconFile(URI.create("localhost:8080/iconFiles/APRS-primary.png"), 21, 21, new XYPoint(10,10));
        
        for (TrackingEntry entry : locationService.getEntries()) {
            writer.startObject(entry.getLocation());
            String hoverText = entry.getAprsId().toString();
            if (entry.getCourse() != null) {
                hoverText += "\n" + entry.getCourse() + " @ " + QuantityUtil.setScale(entry.getSpeed().to(USCustomary.MILE_PER_HOUR), 0, RoundingMode.HALF_UP);
            }
            
            writer.addObjectText(new XYPoint(0,14),basicFont,entry.getAprsId().toString(), hoverText);
//            try {
//                IconIdentifier id = iconSupplier.getSymbolUri(entry.getSymbolCode());
//                // FIXME: do proper URI resolution
//                writer.addObjectIcon(aprsPrimary, id.getIconNumber(), XYPoint.NO_OFFSET, Quantities.getQuantity(0, USCustomary.DEGREE_ANGLE), Optional.empty());
//            }
//            catch (Exception ex) {
//                logger.error("error adding icon for {}", entry.getAprsId(), ex);
//            }
            writer.endObject();
        }
        out.flush();
        out.close();
        
        return out.toString();
    }
}
